import { h, Component, render } from '../vendor/preact.module.js';
import Router, { route } from '../vendor/router.module.js';
import { useEffect, useState } from '../vendor/hooks.module.js';
import htm from '../vendor/htm.module.js';
//import {reaction} from '../vendor/mobx.module.js';

// Initialize htm with Preact
const html = htm.bind(h);

import TwoFactorCode from '../components/two-factor-code.js';

export function Verify(props) {
  const {ipc} = props.state;

  const verify = async (token) => {
    console.log("Verify with token", token);
    const result = await ipc.call("Signup.verify", token);
    if (result) {
      console.log("Calling build to complete the signup...");
      const account = await ipc.call("Signup.build");
      props.state.primaryAccount = account;
      //route("/dashboard");
      console.log("TODO: route to the deshboard");
    }
  }

  return html`
    <div>
      <h3>Verify 2FA</h3>
      <p>Now enter a 6-digit token generated by the 2FA application you installed to complete creating your new account.</p>
      <${TwoFactorCode} onSubmit=${verify} />
    </div>
  `;
}

export function Welcome(props) {
  useEffect(() => {
    console.log("Prompt for login passphrase...");
  }, []);

  return html`
      <div></div>
  `;
}

export class Signup {
  componentDidMount() {
    const {ipc} = this.props.state;
    const start = async () => {
      // Start the signup process to
      // create the account builder
      await ipc.call("Login.start");
    }
    start();
  }

  componentWillUnmount() {
    const {ipc} = this.props.state;
    const finish = async () => {
      // Ensure we call finish so that secrets
      // stored in memory are erased
      await ipc.call("Login.finish");
    }
    finish();
  }

  render(props) {
    const {state} = props;
    return html`
      <${Router}>
        <${Welcome} path="/login" state=${state} />
      <//>
    `;
  }
}
